name: Deploy Service

on:
  push:
    branches: ['main']
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: self-hosted
    env:
      SSH_USER: admin
      SSH_KEY: ${{ secrets.ELEMENTERRA_ACTIONS_SSH_KEY }}
      DEPLOYMENT_HOST: ${{ secrets.DEPLOYMENT_HOST }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure ssh
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_ed 
          chmod 600 ~/.ssh/id_ed
          cat >>~/.ssh/config <<END
          Host deployment-host
            HostName $DEPLOYMENT_HOST
            User $SSH_USER      
            IdentityFile ~/.ssh/id_ed
            StrictHostKeyChecking no
          END

      - name: Fill update deployment script with secrets
        run: |
          sed -i \
            -e "s|__RELATIONAL_DATABASE_HOST__|${{ secrets.RELATIONAL_DATABASE_HOST }}|g" \
            -e "s|__RELATIONAL_DATABASE_USERNAME__|${{ secrets.RELATIONAL_DATABASE_USERNAME }}|g" \
            -e "s|__RELATIONAL_DATABASE_PASSWORD__|${{ secrets.RELATIONAL_DATABASE_PASSWORD }}|g" \
            -e "s|__RELATIONAL_DATABASE_NAME__|${{ secrets.RELATIONAL_DATABASE_NAME }}|g" \
            -e "s|__OBJECT_DATABASE_HOST__|${{ secrets.OBJECT_DATABASE_HOST }}|g" \
            -e "s|__OBJECT_DATABASE_USERNAME__|${{ secrets.OBJECT_DATABASE_USERNAME }}|g" \
            -e "s|__OBJECT_DATABASE_PASSWORD__|${{ secrets.OBJECT_DATABASE_PASSWORD }}|g" \
            -e "s|__OBJECT_DATABASE_NAME__|${{ secrets.OBJECT_DATABASE_NAME }}|g" \
            pull_and_deploy.sh

      - name: Trigger deployment on host
        run: ssh deployment-host 'bash -s' < pull_and_deploy.sh
